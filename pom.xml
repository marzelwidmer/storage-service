<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ch.helsana.microservice</groupId>
    <artifactId>storage-service</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>storage-service</name>
    <description>storage service</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.8.RELEASE</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <!-- ================= Spring ===================== -->
        <!-- Spring Cloud -->
        <spring-cloud.version>Dalston.SR2</spring-cloud.version>
        <!-- spring-boot-admin -->
        <spring-boot-admin-starter-client.version>1.5.0</spring-boot-admin-starter-client.version>

        <!-- ================= Package / Release ===================== -->
        <!-- Maven -->
        <maven-site-plugin.version>3.4</maven-site-plugin.version>
        <maven-resources-plugin.version>2.7</maven-resources-plugin.version>
        <maven-javadoc-plugion>2.10.3</maven-javadoc-plugion>
        <maven-deploy-plugin>2.8.2</maven-deploy-plugin>
        <maven-source-plugin>2.4</maven-source-plugin>
        <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
        <!-- jGitFlow -->
        <jgitflow-maven-plugin.version>1.0-m5.1</jgitflow-maven-plugin.version>
        <!-- Used for Nexus StorageFile -->
        <wagon-webdav-jackrabbit.version>2.4</wagon-webdav-jackrabbit.version>
        <!-- Asciidoc -->
        <asciidoctor.maven.plugin.version>1.5.3</asciidoctor.maven.plugin.version>
        <asciidoctor-pdf.version>1.5.0-alpha.10.1</asciidoctor-pdf.version>
        <asciidoctor-diagram.version>1.5.0</asciidoctor-diagram.version>
        <asciidoctor-outputDirectory>${project.basedir}/src/main/resources/static/manage/docs</asciidoctor-outputDirectory>
        <snippetsDirectory>${project.build.directory}/generated-snippets</snippetsDirectory>


        <!-- ================= Test / CodeQuality  ===================== -->
        <!--  JUnit Test Skip  -->
        <unit-tests.skip>false</unit-tests.skip>
        <!--  Integration Test Skip -->
        <integration-tests.skip>true</integration-tests.skip>
        <!-- JaCoCo-->
        <jacoco-maven-plugin.version>0.7.7.201606060606</jacoco-maven-plugin.version>
        <argLine>-XX:PermSize=128m -XX:MaxPermSize=512m</argLine>
        <!-- Coveralls -->
        <coveralls-maven-plugin.version>4.2.0</coveralls-maven-plugin.version>


        <!-- ================= DEPENDENCIES ===================== -->
        <!-- SOAP und XML Mapping -->
        <wsdlRoot>${project.basedir}/src/main/resources/wsdl</wsdlRoot>
        <maven-jaxb2-plugin.version>0.13.2</maven-jaxb2-plugin.version>
        <!-- Dozer -->
        <dozer.version>5.5.1</dozer.version>
        <dozer-jdk8-support.version>1.0.3</dozer-jdk8-support.version>

        <!-- json-path -->
        <json-path.version>2.2.0</json-path.version>
        <!-- Database -->
        <!-- Oracle -->
        <ojdbc6.version>11.2.0.3.0</ojdbc6.version>
        <!-- Directories for generating SQL scripts -->
        <flyway-dir>${project.basedir}/src/main/resources/db/migration</flyway-dir>
        <sql-script-dir>${project.build.directory}/sql-scripts</sql-script-dir>
        <grant-user>myhlscustomeruser</grant-user>
        <groovy-maven-plugin.version>2.0</groovy-maven-plugin.version>

        <!-- ================= Frontend ===================== -->
        <bootstrap.version>3.3.7</bootstrap.version>
        <jquery.version>3.1.1</jquery.version>
        <!-- ================= FSL Components ===================== -->
        <fsl-security.version>1.0.3-SNAPSHOT</fsl-security.version>
    </properties>


    <dependencies>
        <!-- ================= FSL Components ===================== -->
        <!-- security-library -->
        <dependency>
            <groupId>ch.helsana.microservice</groupId>
            <artifactId>fsl-security</artifactId>
            <version>${fsl-security.version}</version>
        </dependency>

        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
            <version>${spring-boot-admin-starter-client.version}</version>
        </dependency>

        <!-- spring-cloud -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-feign</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-hystrix</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zipkin</artifactId>
        </dependency>
        <!-- spring-boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${bootstrap.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>${jquery.version}</version>
        </dependency>

        <!-- oracle -->
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc6</artifactId>
            <version>${ojdbc6.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- h2 database-->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <!--<scope>runtime</scope> used for H2 database console @see WebConfiguration-->
        </dependency>

        <!-- json-path -->
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>${json-path.version}</version>
        </dependency>

        <!-- dozer -->
        <dependency>
            <groupId>net.sf.dozer</groupId>
            <artifactId>dozer</artifactId>
            <version>${dozer.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-log4j12</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.craftsman</groupId>
            <artifactId>dozer-jdk8-support</artifactId>
            <version>${dozer-jdk8-support.version}</version>
        </dependency>

        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- jGitFlow -->
        <dependency>
            <groupId>external.atlassian.jgitflow</groupId>
            <artifactId>jgitflow-maven-plugin</artifactId>
            <version>${jgitflow-maven-plugin.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-simple</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>


        <!-- starter-test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Rest-Docs -->
        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <!-- Build -->
    <build>
        <finalName>${project.name}-${project.version}</finalName>
        <!-- Plugins -->
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- Git information -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>external.atlassian.jgitflow</groupId>
                <artifactId>jgitflow-maven-plugin</artifactId>
                <version>${jgitflow-maven-plugin.version}</version>
                <configuration>
                    <pushFeatures>true</pushFeatures>
                    <pushReleases>true</pushReleases>
                    <pushHotfixes>true</pushHotfixes>
                    <suppressFastForward>true</suppressFastForward>
                    <scmCommentPrefix>jgf:</scmCommentPrefix>
                    <!--enforce line ending-->
                    <eol>lf</eol>
                </configuration>
            </plugin>
            <!-- SureFire -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Documentation.java</include>
                    </includes>
                </configuration>
            </plugin>
        </plugins>
        <!-- Used for Nexus StorageFile -->
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-webdav-jackrabbit</artifactId>
                <version>${wagon-webdav-jackrabbit.version}</version>
            </extension>
        </extensions>
    </build>

    <!-- Profiles -->
    <profiles>
        <profile>
            <id>install-3rdParty</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-install-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>oracle-driver</id>
                                <phase>pre-clean</phase>
                                <goals>
                                    <goal>install-file</goal>
                                </goals>
                                <configuration>
                                    <groupId>com.oracle</groupId>
                                    <artifactId>ojdbc6</artifactId>
                                    <version>${ojdbc6.version}</version>
                                    <file>${project.basedir}/libs/ojdbc6-${ojdbc6.version}.jar</file>
                                    <packaging>jar</packaging>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- SOAP -->
        <profile>
            <id>soap</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- maven-jaxb2-plugin -->
                    <plugin>
                        <groupId>org.jvnet.jaxb2.maven2</groupId>
                        <artifactId>maven-jaxb2-plugin</artifactId>
                        <version>${maven-jaxb2-plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <schemaDirectory>${wsdlRoot}</schemaDirectory>
                            <schemaIncludes>
                                <include>*.wsdl</include>
                            </schemaIncludes>
                        </configuration>
                    </plugin>
                    <!-- Builder Helper add Resources-->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>${project.build.directory}/generated-sources/java/</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- AsciiDoc-->
        <profile>
            <id>asciidoc</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- AsciiDoc -->
                    <plugin>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctor-maven-plugin</artifactId>
                        <version>${asciidoctor.maven.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>generate-docs</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>process-asciidoc</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <sourceDirectory>${project.basedir}/src/docs/asciidoc</sourceDirectory>
                            <baseDir>${project.basedir}/src/docs/asciidoc-resources</baseDir>
                            <backend>html5</backend>
                            <doctype>book</doctype>
                            <sourceDocumentName>manual.adoc</sourceDocumentName>
                            <sourceHighlighter>coderay</sourceHighlighter>
                            <requires>
                                <require>asciidoctor-diagram</require>
                            </requires>
                            <attributes>
                                <sectnums>true</sectnums>
                                <snippets>${snippetsDirectory}</snippets>
                                <imagesdir>images</imagesdir>
                                <project-version>${project.version}</project-version>
                                <project-name>${project.name}</project-name>
                                <project-artifact-name>${project.name}-${project.version}</project-artifact-name>
                            </attributes>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.asciidoctor</groupId>
                                <artifactId>asciidoctorj-diagram</artifactId>
                                <version>${asciidoctor-diagram.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.asciidoctor</groupId>
                                <artifactId>asciidoctorj-pdf</artifactId>
                                <version>${asciidoctor-pdf.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <!-- Resources Plugin -->
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>${maven-resources-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${asciidoctor-outputDirectory}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/generated-docs</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Site -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <version>${maven-site-plugin.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.asciidoctor</groupId>
                                <artifactId>asciidoctor-maven-plugin</artifactId>
                                <version>${asciidoctor.maven.plugin.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Jacoco / Coveralls -->
        <profile>
            <id>code-coverage</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- Jacoco -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco-maven-plugin.version}</version>

                        <configuration>
                            <excludes>
                                <exclude>**/ch/helsana/services/**</exclude>
                            </excludes>
                        </configuration>

                        <executions>
                            <execution>
                                <id>default-prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>default-report</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>check-coverage</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <!-- Bundle -->
                                        <rule>
                                            <element>BUNDLE</element>
                                            <excludes>
                                                <exclude>**/*Test*</exclude>
                                                <exclude>**/*Documentation*</exclude>
                                            </excludes>
                                            <limits>
                                                <limit>
                                                    <counter>COMPLEXITY</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <!-- <minimum>0.60</minimum>-->
                                                </limit>
                                            </limits>
                                        </rule>
                                        <!-- Package -->
                                        <rule>
                                            <element>PACKAGE</element>
                                            <limits>
                                                <limit>
                                                    <counter>LINE</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <!--<minimum>0.80</minimum>-->
                                                </limit>
                                                <limit>
                                                    <counter>CLASS</counter>
                                                    <value>MISSEDCOUNT</value>
                                                    <!--<maximum>0</maximum>-->
                                                </limit>
                                            </limits>
                                        </rule>
                                        <!-- Class -->
                                        <rule>
                                            <element>CLASS</element>
                                            <excludes>
                                                <exclude>*Test*</exclude>
                                            </excludes>
                                            <limits>
                                                <limit>
                                                    <counter>LINE</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <!-- <minimum>0.50</minimum>-->
                                                </limit>
                                            </limits>
                                        </rule>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- CODE COVERAGE PUBLISHER -->
                    <plugin>
                        <groupId>org.eluder.coveralls</groupId>
                        <artifactId>coveralls-maven-plugin</artifactId>
                        <version>${coveralls-maven-plugin.version}</version>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Gernerate SQL -->
        <profile>
            <id>consolidated-sql</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.code.maven-replacer-plugin</groupId>
                        <artifactId>replacer</artifactId>
                        <executions>
                            <execution>
                                <id>generate-sql</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>replace</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>${flyway-dir}/*.sql</include>
                                    </includes>
                                    <preserveDir>false</preserveDir>
                                    <outputBasedir>${sql-script-dir}</outputBasedir>
                                    <outputDir>.</outputDir>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <replacements>
                                <!-- remove ${oracle} but keep the rest of the line -->
                                <replacement>
                                    <token>\$\{oracle\}\s*</token>
                                    <value />
                                </replacement>
                                <!-- remove lines starting with ${h2} -->
                                <replacement>
                                    <token>\$\{h2\}.*</token>
                                    <value />
                                </replacement>
                                <!-- replace ${grant.user} with &USER_NAME-->
                                <replacement>
                                    <token>\$\{grant\.user\}</token>
                                    <value>${grant-user}</value>
                                </replacement>
                                <!-- remove comments starting with triple dash -->
                                <replacement>
                                    <token>---.*</token>
                                    <value />
                                </replacement>
                                <!-- remove whitespace at start and end of script -->
                                <replacement>
                                    <token>^\s*|\s*$</token>
                                    <value />
                                </replacement>
                                <!-- replace two+ empty lines with a single empty line -->
                                <replacement>
                                    <token>(?:(\r?\n)\s*){3,}</token>
                                    <value>$1$1</value>
                                </replacement>
                            </replacements>
                        </configuration>
                    </plugin>

                    <!--
                        Generates the consolidated SQL script for setting up a new database.
                        Also changes the line endings of the scripts to Unix line endings.
                     -->
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>groovy-maven-plugin</artifactId>
                        <version>${groovy-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>generate-consolidated-sql</id>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <properties>
                                        <scriptDir>${sql-script-dir}</scriptDir>
                                        <targetScript>${sql-script-dir}/oracle_init_${project.version}.sql</targetScript>
                                    </properties>
                                    <source>
                                <![CDATA[
                                        def sourceFiles = new FileNameByRegexFinder().getFileNames(properties['scriptDir'], /.*\.sql/)
                                        def targetFile = new File(properties['targetScript'])
                                        if (!targetFile.createNewFile()) {
                                            targetFile.write('')
                                        }
                                        sourceFiles.each {
                                            def sourceFile = new File(it)
                                            sourceFile.write(sourceFile.text.replaceAll(~/\r\n/, '\n'))
                                        }
                                        sourceFiles.sort().each { targetFile << new File(it).text << '\n\n' } ]]>
                            </source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sql-scripts</id>
                                <goals>
                                    <goal>attach-artifact</goal>
                                </goals>
                                <configuration>
                                    <artifacts>
                                        <artifact>
                                            <file>${sql-script-dir}/oracle_init_${project.version}.sql</file>
                                            <type>sql</type>
                                            <classifier>oracle_init_${project.version}</classifier>
                                        </artifact>
                                    </artifacts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>


        <!--  release-dry-run-->
        <profile>
            <id>release-dry-run</id>
            <!--Deploy artifacts to nexus PRE-PROD-->
            <distributionManagement>
                <snapshotRepository>
                    <id>snapshots</id>
                    <name>Helsana Snapshots auf Alma Entw.</name>
                    <url>http://alma-artifact-entw.hel.kko.ch/nexus/repository/snapshots/</url>
                </snapshotRepository>

                <repository>
                    <id>releases</id>
                    <name>Helsana Releases auf Alma Entw.</name>
                    <url>http://alma-artifact-entw.hel.kko.ch/nexus/repository/releases/</url>
                </repository>
            </distributionManagement>

            <!--Perform release without tagging origin/master-->
            <build>
                <plugins>
                    <plugin>
                        <groupId>external.atlassian.jgitflow</groupId>
                        <artifactId>jgitflow-maven-plugin</artifactId>
                        <version>${jgitflow-maven-plugin.version}</version>
                        <configuration>
                            <!--do not push release branch -->
                            <pushReleases>false</pushReleases>
                            <pushHotfixes>false</pushHotfixes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- release -->
        <profile>
            <id>release</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <!-- Distribution -->
            <distributionManagement>
                <repository>
                    <id>releases</id>
                    <url>dav:http://alma-artifact/nexus/content/repositories/releases/</url>
                </repository>
                <snapshotRepository>
                    <uniqueVersion>false</uniqueVersion>
                    <id>snapshots</id>
                    <url>dav:http://alma-artifact/nexus/content/repositories/snapshots/</url>
                </snapshotRepository>
            </distributionManagement>
        </profile>
    </profiles>

    <!-- SpringCloud -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>